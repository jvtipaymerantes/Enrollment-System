<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAABBFJREFUeF7t
        3Vmo53MYx/GD0FhGuGEozEzJvs00kWwJCUnWSMZWrjDDNHM3hLggeyQupNwoNblzI7LkglzIdmMr+76P
        9f2RU5qe0f/7PP/nnNTnXa+LuZmL55n/mf//nN/3e2acc879X9oL+2Krv//k5q1D8Tr+/MdnOAduHjoe
        P2B2Gf+2Fm4OOw6bW8YsL2WO0jK+R7SETa2Da+xYTLqMWV5KU8dgdBmzvJQpdzi+RDTsSfyBq+Cm0GH4
        AtGgR/yGI+AKrcDXiAaccTtcskPwOaLBZj0Bl+hg6FN3NNSK9XCDHYRPEQ20Qm8K9oQb6EB0LOM7HA03
        0DJ8hWigFd/iSLiB9Ha0Yxl6ZRwFN5CWUfnQtzn+MpWo6z/wn3Ai3ECdyzgJbqCud1M/4xS4gbSMTxAN
        tGIjzoQb6AB0LONXnAU3UOcy/GDDYPvjY0QDrfgdF8MN1LmMS+AG2g8dy9BPAC+FG0jL+AjRQCu0jCvg
        BlqKDxANtOpquIGWoGsZ18INpGW8j2iYVdfBDbQYXcu4AW4gLeM9RMOsugluoH3QtYxb4AbqXMZtcAPt
        jXcRDbPqXmwBN2Gdy7gfXsZAe+AdRMOsegBexkBaxtuIhln1KLaEm7DOZTwGn6AdaBG6lvE4vIyBtIy3
        EA2z6klsDTdhWsabiIZZtQHbwE3Y7uhaxlPwMgZaiFcRDbPqWWwPN9BDiIZZ9Tx2hBts2kfJ5BlsBzeY
        3vXoWadoqBXXwCXr+P/Dj+0UOhk61x0NtkJ/54Vwic5Gx5cuP8ZTqGspeqVcBJdIDzJ3LeUCuETnomsp
        58El6lqKDtqcAZdI/5o7lvILToNLdD463hJrKafCJdIHPH3QiwZb8SNOgEu0Eh1L0W2juujSJepaiu5W
        1B2LLpFOMnUs5RvoRjmX6DJ0LEXX+y2HS3Q5OpaiW4J8eWUyLUXfPIwGW6Hr/nQ3ikuk7+R2LEV3o+jy
        AZfoSnQsRTdB6Ny7S6TTsh1L+RA6y+gSaSnRUKt0llHH6FwiPdwQDbVKJ7d0gssl0vnyaKhVOjSk3z/l
        EnUtRU/l6xlkl2gVoqFW6el8PYvsEq1GNNSqN7AbXCJdkxENteo17AqX6HpEQ63SU5e7wCVag2ioVa9g
        Z7hE+p0e0VCrXoSPPiTrWorPoxTSFUzRUKueww5wiW5ENNSqp7EALtEdiIZapV8I5ms7EmlodyIaapWf
        Iy50M6KhVjwMl0yvlHsQDTZLd6q4QlrKfYiGm6EfLbtiWoouNYsGPOJlbAs3pW5FNOhJvISd4KaYXil3
        IRr4f/EyGtNS7kY0+Ii+n+VlNDfpuy8vYw7TUnSVbLQI0TJ0o5Gbw3Rh5oPYdBkvwD8LmcdOh94WPwJ9
        zvCVgc4555ybVjMzfwHwKC6KBrm5zgAAAABJRU5ErkJggg==
</value>
  </data>
</root>